-- A separate schema for a 3rd tenant
-- this schema isn't shared - we don't need the Tenant View Filter
-- however, we still need unique user credentials - it's still the same database
CREATE SCHEMA RJB_BLOG_MULTITENANCY_2;

CREATE TABLE RJB_BLOG_MULTITENANCY_2.PRODUCT  (
   id INT GENERATED BY DEFAULT AS IDENTITY,
   tenant_id VARCHAR(255) DEFAULT 'rjb-blog-mutlitenancy-3',
   version INT DEFAULT 1 NOT NULL,
   created_user VARCHAR(255) NOT NULL,
   created_timestamp TIMESTAMP NOT NULL,
   updated_user VARCHAR(255) NOT NULL,
   updated_timestamp TIMESTAMP NOT NULL,
   category VARCHAR(255) NOT NULL,
   sku VARCHAR(255) NOT NULL
);
CREATE INDEX RJB_BLOG_MULTITENANCY_2.IDX_PRODUCT_TENANT_ID ON RJB_BLOG_MULTITENANCY_2.PRODUCT (sku);
CREATE UNIQUE INDEX RJB_BLOG_MULTITENANCY_2.IDX_PRODUCT_SKU ON RJB_BLOG_MULTITENANCY_2.PRODUCT (sku);

CREATE USER "rjb-blog-mutlitenancy-3" PASSWORD 'rjb-blog-mutlitenancy-3';

GRANT SELECT, INSERT, UPDATE, DELETE ON RJB_BLOG_MULTITENANCY_2.PRODUCT TO "rjb-blog-mutlitenancy-3";

INSERT INTO RJB_BLOG_MULTITENANCY_2.PRODUCT (id, created_user, created_timestamp, updated_user, updated_timestamp, category, sku) 
VALUES (5, 'rjb-multitenancy-blog', CURRENT_TIMESTAMP, 'rjb-multitenancy-blog', CURRENT_TIMESTAMP, 'Test Category', 'SKU-1');